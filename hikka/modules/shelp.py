from asyncio import sleep
from .. import loader, utils
import asyncio
from telethon.tl.types import Message, ChatAdminRights
from telethon import functions, TelegramClient, errors
from ..inline.types import InlineCall
import inspect
import re
import logging

@loader.tds
class SHelp(loader.Module):
    """–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –•–∏–∫–∫–∏"""
    strings = {
        "name": "SHelp",
    }
    @loader.command()
    async def shhelp(self, message):
        """–ì–∞–π–¥ –ø–æ –•–∏–∫–∫–µ"""
        await self.inline.form(
            text=f"<b>üåò –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –•–∏–∫–∫–∏:</b>\n\n<i>.cfg - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥—É–ª–µ–π —Ö–∏–∫–∫–∏ –∫–∞–∫ –∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç–∞–∫ –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö\n.lm - –ù–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —Å–∞–º —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –º–æ–¥—É–ª–µ–π, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –æ—Ç–≤–µ—Ç –∫ —Ñ–∞–π–ª—É —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .py, —Ç–∞–∫–∂–µ –Ω—É–∂–Ω–æ —Å–æ–±–ª—é–¥–∞—Ç—å –æ—Å—Ç–æ—Ä–æ–Ω–∂–Ω–æ—Å—Ç—å —Å —É—Å—Ç–∞–Ω–æ–≤–∫–∞–º–∏ –≤–µ–¥—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥—É–ª–∏ –º–æ–≥—É—Ç —É–¥–∞–ª–∏—Ç—å –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç\n.ulm - –£–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è. –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: .ulm test, –≥–¥–µ test - –Ω–∞–∑–≤–∞–Ω–∏–µ —É–¥–∞–ª—è–µ–º–æ–≥–æ –º–æ–¥—É–ª—è\n.info - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ö–∏–∫–∫–∏, –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –û–ó–£, –Ω–∞–≥—Ä—É–∑–∫–∞ –∏ —Ç.–ø.\n.help - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π\n.ml - –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —É—Å—Ç–∞–µ–æ–≤–ª–µ–Ω–Ω—ã–º –º–æ–¥—É–ª–µ–º. –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: .ml test, –≥–¥–µ test - –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –º–æ–¥—É–ª—è</i>",
            message=message,
            reply_markup=[
                [
                    {
                        'text' : 'üî∏ –î–∞–ª–µ–µ',
                        'callback' : self.zam1,
                    },
                    {
                        'text' : 'üîª –ó–∞–∫—Ä—ã—Ç—å',
                        'action' : 'close'
                    }
                ]
            ]
        )
    async def zam1(self, call:InlineCall):
        await call.edit(
            text=f"üåò <b>–ö–∞–Ω–∞–ª—ã —Å –º–æ–¥—É–ª—è–º–∏:</b>\n@hikarimods\n@morisummermods\n@nalinormods\n@AstroModules\n@vsecoder_m\n@mm_mods\n@apodiktum_modules\n@shadow_modules\n@DorotoroMods\n@HikkaFTGmods\n@nercymods\n@sqlmerr_m\n@AuroraModules\n@famods\n@codrago_m",
            reply_markup=[
                [
                    {
                        'text' : 'üî∏ –ù–∞–∑–∞–¥',
                        'callback' : self.zam2,
                    },
                    {
                        'text' : 'üî∏ –î–∞–ª–µ–µ',
                        'callback' : self.zam3,
                    },
                ],
                [
                    {
                        'text' : 'üîª –ó–∞–∫—Ä—ã—Ç—å',
                        'action' : 'close'
                    }
                ]
            ]
        )
    async def zam2(self, call:InlineCall):
        await call.edit(
            text=f"<b>üåò –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –•–∏–∫–∫–∏:</b>\n\n<i>.cfg - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥—É–ª–µ–π —Ö–∏–∫–∫–∏ –∫–∞–∫ –∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç–∞–∫ –∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö\n.lm - –ù–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ —Å–∞–º —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –º–æ–¥—É–ª–µ–π, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –æ—Ç–≤–µ—Ç –∫ —Ñ–∞–π–ª—É —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .py, —Ç–∞–∫–∂–µ –Ω—É–∂–Ω–æ —Å–æ–±–ª—é–¥–∞—Ç—å –æ—Å—Ç–æ—Ä–æ–Ω–∂–Ω–æ—Å—Ç—å —Å —É—Å—Ç–∞–Ω–æ–≤–∫–∞–º–∏ –≤–µ–¥—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥—É–ª–∏ –º–æ–≥—É—Ç —É–¥–∞–ª–∏—Ç—å –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç\n.ulm - –£–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è. –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: .ulm test, –≥–¥–µ test - –Ω–∞–∑–≤–∞–Ω–∏–µ —É–¥–∞–ª—è–µ–º–æ–≥–æ –º–æ–¥—É–ª—è\n.info - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ö–∏–∫–∫–∏, –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –û–ó–£, –Ω–∞–≥—Ä—É–∑–∫–∞ –∏ —Ç.–ø.\n.help - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π\n.ml - –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —É—Å—Ç–∞–µ–æ–≤–ª–µ–Ω–Ω—ã–º –º–æ–¥—É–ª–µ–º. –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: .ml test, –≥–¥–µ test - –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –º–æ–¥—É–ª—è</i>",
            reply_markup=[
                [
                    {
                        'text' : 'üî∏ –î–∞–ª–µ–µ',
                        'callback' : self.zam1,
                    },
                    {
                        'text' : 'üîª –ó–∞–∫—Ä—ã—Ç—å',
                        'action' : 'close'
                    }
                ]
            ]
        )
    async def zam3(self, call:InlineCall):
        await call.edit(
            text=f"üåò <b>–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:</b>\n–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–ø–ø–æ—Ä—Ç —á–∞—Ç t.me/hikka_talks",
            reply_markup=[
                [
                    {
                        'text' : 'üî∏ –ù–∞–∑–∞–¥',
                        'callback' : self.zam1,
                    },
                    {
                        'text' : 'üîª –ó–∞–∫—Ä—ã—Ç—å',
                        'action' : 'close'
                    }
                ]
            ]
        )
        